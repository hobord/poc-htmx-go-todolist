// Code generated by mockery. DO NOT EDIT.

package logger

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockLogger is an autogenerated mock type for the Logger type
type MockLogger struct {
	mock.Mock
}

// Debug provides a mock function with given fields: msg, args
func (_m *MockLogger) Debug(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// DebugContext provides a mock function with given fields: ctx, msg, args
func (_m *MockLogger) DebugContext(ctx context.Context, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Error provides a mock function with given fields: msg, args
func (_m *MockLogger) Error(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// ErrorContext provides a mock function with given fields: ctx, msg, args
func (_m *MockLogger) ErrorContext(ctx context.Context, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Info provides a mock function with given fields: msg, args
func (_m *MockLogger) Info(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// InfoContext provides a mock function with given fields: ctx, msg, args
func (_m *MockLogger) InfoContext(ctx context.Context, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Warn provides a mock function with given fields: msg, args
func (_m *MockLogger) Warn(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// WarnContext provides a mock function with given fields: ctx, msg, args
func (_m *MockLogger) WarnContext(ctx context.Context, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// NewMockLogger creates a new instance of MockLogger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLogger(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLogger {
	mock := &MockLogger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
