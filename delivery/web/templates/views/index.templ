package views

import (
	"github.com/hobord/poc-htmx-go-todolist/entities"
	"github.com/hobord/poc-htmx-go-todolist/delivery/web/templates/components"
)

templ IndexPage(groups []*entities.TodoGroup) {
	<html>
		<head>
			<title>To Do List</title>
			<link rel="stylesheet" type="text/css" href="/assets/css/index.css"/>
			<script src="/assets/js/htmx.js"></script>
			<!-- jsDelivr :: Sortable :: Latest (https://www.jsdelivr.com/package/npm/sortablejs) -->
			<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
			<script>
            htmx.onLoad(function(content) {
                var sortables = content.querySelectorAll(".sortable");
                
                for (var i = 0; i < sortables.length; i++) {
                    var sortable = sortables[i];
                    var sortableInstance = new Sortable(sortable, {
                        animation: 150,
                        ghostClass: 'blue-background-class',

                        // Make the `.htmx-indicator` unsortable
                        filter: ".htmx-indicator",
                        onMove: function (evt) {
                            return evt.related.className.indexOf('htmx-indicator') === -1;
                        },

                        // Disable sorting on the `end` event
                        onEnd: function (evt) {
                            this.option("disabled", true);
                        }
                    });

                    // Re-enable sorting on the `htmx:afterSwap` event
                    sortable.addEventListener("htmx:afterSwap", function() {
                        sortableInstance.option("disabled", false);
                    });
                }
            })
      </script>
		</head>
		<body>
			@components.ListTodoGroups(groups)
		</body>
	</html>
}
